<UserControl x:Class="MSGorilla.OutlookAddin.GUI.Shortcut"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MSGorilla.OutlookAddin.GUI"
             xmlns:util="clr-namespace:MSGorilla.OutlookAddin"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <DockPanel LastChildFill="True">
        <DockPanel.Resources>
            <!--Reset TreeItemView Style so that entire row will be highlighted when Mouse is moved on it-->
            <Style TargetType="{x:Type local:MyTreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:MyTreeViewItem}">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" MinWidth="19" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>
                                    <!--
                             Note that the following do not work, but I believe the top 2 should?!
                             <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                        -->
                                    <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Name="Expander">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="UIElement.Focusable" Value="false" />
                                                <Setter Property="FrameworkElement.Width" Value="16" />
                                                <Setter Property="FrameworkElement.Height" Value="16" />
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Padding="5,5,5,5" Background="#00FFFFFF" Width="16" Height="16">
                                                                <Path Fill="#00FFFFFF" Stroke="#FF989898" Name="ExpandPath">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135"  CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                                </Trigger>
                                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Border x:Name="Bd" HorizontalAlignment="Stretch" BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                                    Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Grid.Column="1">
                                        <ContentPresenter x:Name="PART_Header"
                                            Content="{TemplateBinding HeaderedContentControl.Header}"
                                            ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                            ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                            ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                            ContentSource="Header"
                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" />
                                </Grid>
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="local:MyTreeViewItem.IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="local:MyTreeViewItem.HasItems" Value="False">
                                    <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="local:MyTreeViewItem.IsSelected" Value="True">
                                    <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="local:MyTreeViewItem.IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Bd" Property="Panel.Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                    <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
                <EventSetter Event="Selected" Handler="load" />
                <Style.Triggers>
                    <Trigger Property="util:MyTreeViewHelper.IsMouseDirectlyOverItem" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" />
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            
            <!--<Style TargetType="{x:Type local:MyTreeViewItem}">
                <EventSetter Event="Selected" Handler="load" />

                <Style.Triggers>
                    <Trigger Property="util:MyTreeViewHelper.IsMouseDirectlyOverItem" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" />
                        <Setter Property="Foreground" Value="White"/> 
                    </Trigger>
                </Style.Triggers>
            </Style>-->
        </DockPanel.Resources>
        
        <RichTextBox DockPanel.Dock="Top" Name="Link2MSGorilla" HorizontalAlignment="Left" IsReadOnly="True" MinWidth="200"
                   IsDocumentEnabled="True" VerticalAlignment="Top" Foreground="#FF1364C4"
                   FontFamily="Calibri" FontSize="14" BorderBrush="{x:Null}" SelectionBrush="{x:Null}">
            <RichTextBox.Background>
                <ImageBrush/>
            </RichTextBox.Background>
        </RichTextBox>

        <TextBox DockPanel.Dock="Top" Name="SearchTB" MinWidth="200" FontSize="14" FontFamily="Calibri" MouseEnter="SelectAll"/>
        <Button DockPanel.Dock="Top" Name="SearchBtn" Content="Search" FontSize="14" FontFamily="Calibri"
                Background="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}" 
                Foreground="White" Width="60" HorizontalAlignment="left" Click="SearchMSGorilla"/>

        <TreeView Name="tree" HorizontalAlignment="Stretch" Margin="5,10,0,0" 
                  VerticalAlignment="Top" BorderThickness="0"
                  FontSize="14" FontFamily="Calibri Light" FontWeight="Bold">
        </TreeView>
    </DockPanel>
</UserControl>
